/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stopwatchraggammaximilian;

import com.google.gson.Gson;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.List;

/**
 *
 * @author maxim
 */
public class Oberflaeche extends javax.swing.JFrame {

    /**
     * Creates new form Oberflaeche
     */
    public Oberflaeche() {
        initComponents();
        setTitle("Client");
        setMinimumSize(new Dimension(300, 150));
        setSize(500, 250);
        jLabelClock.setText("0.000");

        jButtonConnect.setEnabled(false);
        jButtonClear.setEnabled(false);
        jButtonDisconnect.setEnabled(false);
        jButtonEnd.setEnabled(false);
        jButtonStart.setEnabled(false);
        jButtonStop.setEnabled(false);
    }
    
    private class PortConnectionWorker extends ConnectionWorker {
        private Socket socket;

        public PortConnectionWorker(String host, int port) throws IOException {
            socket = new Socket(host, port);
        }
        
        @Override
    protected String doInBackground() throws Exception{
         
        final Gson gson = new Gson();
        final BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        final OutputStreamWriter writer = new OutputStreamWriter(socket.getOutputStream());
        while(true){
            try{
                final Request request = new Request();
                final String sRequest = gson.toJson(request);
                writer.write(sRequest);
                writer.flush();
                 
                final String sResponse = reader.readLine();
                final Response response = gson.fromJson(sResponse, Response.class);
                publish(response);
                
                Thread.sleep(1000);
            } catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }
    
    @Override
    protected void process(List<Response> list){
        Response response = list.get(0);
        
        if(response.isMaster()){
            jButtonConnect.setEnabled(false);
            jButtonDisconnect.setEnabled(true);
            jButtonStart.setEnabled(true);
            jButtonStop.setEnabled(true);
            jButtonClear.setEnabled(true);
            jButtonEnd.setEnabled(true);
        }
        
        if(response.isRunning()){
            jLabelClock.setText(String.format("%.3f, response.getTime()"));
        }
        
    } 
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelCenter = new javax.swing.JPanel();
        jPanelZeit = new javax.swing.JPanel();
        jLabelClock = new javax.swing.JLabel();
        jPanelButtons = new javax.swing.JPanel();
        jButtonConnect = new javax.swing.JButton();
        jButtonDisconnect = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonEnd = new javax.swing.JButton();
        jPanelRefershrate = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelCenter.setLayout(new javax.swing.BoxLayout(jPanelCenter, javax.swing.BoxLayout.LINE_AXIS));

        jPanelZeit.setLayout(new java.awt.GridBagLayout());

        jLabelClock.setFont(new java.awt.Font("Tahoma", 0, 75)); // NOI18N
        jLabelClock.setText("0.000");
        jLabelClock.setPreferredSize(new java.awt.Dimension(200, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelZeit.add(jLabelClock, gridBagConstraints);

        jPanelCenter.add(jPanelZeit);

        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonConnect.setText("Connect");
        jButtonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonConnect, gridBagConstraints);

        jButtonDisconnect.setText("Disconnect");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonDisconnect, gridBagConstraints);

        jButtonStart.setText("Start");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonStart, gridBagConstraints);

        jButtonStop.setText("Stop");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonStop, gridBagConstraints);

        jButtonClear.setText("Clear");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonClear, gridBagConstraints);

        jButtonEnd.setText("End");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelButtons.add(jButtonEnd, gridBagConstraints);

        jPanelCenter.add(jPanelButtons);

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jPanelRefershrate.setLayout(new javax.swing.BoxLayout(jPanelRefershrate, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Refreshrate: 1s");
        jPanelRefershrate.add(jLabel2);
        jPanelRefershrate.add(jSlider1);

        jLabel3.setText("1ms");
        jPanelRefershrate.add(jLabel3);

        getContentPane().add(jPanelRefershrate, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectActionPerformed
        System.out.println("Button pressed" + Thread.currentThread().getId());
        ConnectionWorker worker = new PortConnectionWorker(8080, "127.0.0.1");
        worker.execute();
    }//GEN-LAST:event_jButtonConnectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oberflaeche().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonConnect;
    private javax.swing.JButton jButtonDisconnect;
    private javax.swing.JButton jButtonEnd;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelClock;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelRefershrate;
    private javax.swing.JPanel jPanelZeit;
    private javax.swing.JSlider jSlider1;
    // End of variables declaration//GEN-END:variables
}
